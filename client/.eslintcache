[{"/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Landing.js":"1","/Users/elvislee/Desktop/hangman-game/client/src/App.js":"2","/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Navigation.js":"3","/Users/elvislee/Desktop/hangman-game/client/src/components/layout/TopScores.js":"4","/Users/elvislee/Desktop/hangman-game/client/src/index.js":"5","/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Difficulty.js":"6","/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Question.js":"7","/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Message.js":"8","/Users/elvislee/Desktop/hangman-game/client/src/components/layout/WinnerModal.js":"9"},{"size":2653,"mtime":1617566627142,"results":"10","hashOfConfig":"11"},{"size":648,"mtime":1616537426408,"results":"12","hashOfConfig":"11"},{"size":575,"mtime":1612591718653,"results":"13","hashOfConfig":"11"},{"size":134,"mtime":1612590653396,"results":"14","hashOfConfig":"11"},{"size":199,"mtime":1612492553307,"results":"15","hashOfConfig":"11"},{"size":1143,"mtime":1616792545052,"results":"16","hashOfConfig":"11"},{"size":1165,"mtime":1617565890845,"results":"17","hashOfConfig":"11"},{"size":178,"mtime":1616718874267,"results":"18","hashOfConfig":"11"},{"size":664,"mtime":1617566555035,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rnxzoe",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Landing.js",["39"],"/Users/elvislee/Desktop/hangman-game/client/src/App.js",[],"/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Navigation.js",[],"/Users/elvislee/Desktop/hangman-game/client/src/components/layout/TopScores.js",[],"/Users/elvislee/Desktop/hangman-game/client/src/index.js",[],"/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Difficulty.js",[],"/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Question.js",["40"],"import React, { useEffect, Fragment } from 'react';\n\nconst Question = ({ puzzle, guessLeft, guessedLetters, setGameStatus, setMessage, onShow }) => {\n  \n  let questionArr = [];\n  if(puzzle) {\n    questionArr = puzzle.split('').map((ch) => {\n      if(guessedLetters.includes(ch)) {\n        return ch;\n      }\n      else if(ch ===  ' ') {\n        return ' ';\n      }\n      return '*';\n    });\n  }\n\n  useEffect(() => {\n    // Check if all characters are guessed\n    if(puzzle && !questionArr.includes('*')) {\n      setGameStatus('winner');\n      setMessage('You got the answer! Great job!');\n      onShow();\n    }\n\n    // Check if run out of guess\n    if(guessLeft === 0) {\n      setGameStatus('gameover');\n      setMessage(`Sorry, the answer is '${puzzle.toUpperCase()}'. Let's play again!`);\n    }\n  }, [puzzle, questionArr, guessLeft]);\n   \n  return (\n    <Fragment>\n      <div className=\"text-center mt-5 mb-3\">\n        <div className=\"questionArea\">\n          { questionArr.map((ch, idx) => <span key={idx}>{ch}</span>) }\n        </div> \n        <p className=\"my-3\">Remaining Guesses: {guessLeft}</p>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Question;\n","/Users/elvislee/Desktop/hangman-game/client/src/components/layout/Message.js",[],"/Users/elvislee/Desktop/hangman-game/client/src/components/layout/WinnerModal.js",[],{"ruleId":"41","severity":1,"message":"42","line":84,"column":6,"nodeType":"43","endLine":84,"endColumn":42,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"45","line":31,"column":6,"nodeType":"43","endLine":31,"endColumn":38,"suggestions":"46"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeGuess'. Either include it or remove the dependency array.","ArrayExpression",["47"],"React Hook useEffect has missing dependencies: 'onShow', 'setGameStatus', and 'setMessage'. Either include them or remove the dependency array. If 'setGameStatus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["48"],{"desc":"49","fix":"50"},{"desc":"51","fix":"52"},"Update the dependencies array to be: [puzzle, gameStatus, guessedLetters, makeGuess]",{"range":"53","text":"54"},"Update the dependencies array to be: [puzzle, questionArr, guessLeft, setGameStatus, setMessage, onShow]",{"range":"55","text":"56"},[2135,2171],"[puzzle, gameStatus, guessedLetters, makeGuess]",[802,834],"[puzzle, questionArr, guessLeft, setGameStatus, setMessage, onShow]"]
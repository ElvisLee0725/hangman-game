{"version":3,"sources":["components/layout/Difficulty.js","components/layout/Question.js","components/layout/Message.js","components/layout/WinnerModal.js","components/layout/Landing.js","components/layout/TopScores.js","components/layout/PuzzleFactory.js","components/layout/Navigation.js","components/layout/404.js","App.js","index.js"],"names":["Difficulty","fetchQuestion","Row","className","title","desc","map","level","Col","xs","sm","Card","Body","Title","Text","Button","onClick","charAt","toLowerCase","slice","Question","questionArr","guessLeft","missedGuesses","ch","idx","toUpperCase","length","Message","message","WinnerModal","props","useState","playerName","setPlayerName","saveScore","a","body","name","score","config","headers","axios","post","JSON","stringify","onHide","console","log","Modal","animation","centered","Header","closeButton","Form","Group","as","controlId","Label","column","Control","type","value","onChange","e","target","variant","Landing","puzzle","setPuzzle","gameStatus","setGameStatus","setMessage","guessedLetters","setGuessedLetters","setMissedGuesses","winnerModalShow","setWinnerModalShow","setQuestionArr","winnerScore","useRef","diffMulti","totalGuess","puzzleType","get","then","res","current","newPuzzle","data","question","split","catch","error","useEffect","makeGuess","key","includes","prevArr","window","addEventListener","removeEventListener","replace","Container","show","TopScores","topScores","setTopScores","fetchScores","scores","Table","striped","s","i","PuzzleFactory","puzzleData","setPuzzleData","contents","handlePuzzle","handleSubmit","preventDefault","difficulty","_id","errors","response","err","msg","onSubmit","Alert","Navigation","Navbar","bg","Brand","to","alt","src","height","Nav","NotFound","href","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52a7d5a5.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\n\nconst Difficulty = ({ fetchQuestion }) => {\n  const gameLevel = [\n    {\n      title: \"Easy\",\n      desc: \"In this mode you can fail up to 7 times with a fairly easy question.\"\n    },\n    {\n      title: \"Medium\",\n      desc: \"In this mode you can fail up to 5 times with a medium question.\"\n    },\n    {\n      title: \"Hard\",\n      desc: \"In this mode you can fail up to 3 times with a crazy hard question.\"\n    }\n  ];\n  return (\n    <Fragment>\n      <Row className=\"mt-5\">\n        { gameLevel.map((level) => (\n          <Col xs=\"12\" sm=\"4\" key={level.title} >\n            <Card>\n              <Card.Body className=\"text-center\">\n                <Card.Title>{level.title}</Card.Title>\n                <Card.Text className=\"text-justify\">{level.desc}</Card.Text>\n                <Button className=\"btn-primary-color\" onClick={() => fetchQuestion(level.title.charAt(0).toLowerCase() + level.title.slice(1))}>Play</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        )) }\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default Difficulty;\n","import React, { Fragment } from 'react';\n\nconst Question = ({ questionArr, guessLeft, missedGuesses }) => {\n  return (\n    <Fragment>\n      <div className=\"text-center mt-5 mb-3\">\n        <div className=\"questionArea\">\n          { questionArr.map((ch, idx) => <span key={idx}>{ch}</span>) }\n        </div> \n        <p className=\"mt-3\">Remaining Guesses: {guessLeft}</p>\n        <p>Missed Guesses: { missedGuesses.map((ch, idx) => <span key={idx}>{ch.toUpperCase()}{idx === missedGuesses.length-1 ? '' : ', ' }</span>) }</p>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Question;\n","import React from 'react';\n\nconst Message = ({message}) => {\n  return (\n    <div className='text-center messageArea'>\n      { message }\n    </div>\n  );\n}\n\nexport default Message;","import React, { useState } from 'react';\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst WinnerModal = (props) => {\n  const [playerName, setPlayerName] = useState('');\n\n  const saveScore = async () => {\n    const body = {\n      name: playerName,\n      score: props.score\n    }\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    try {\n      await axios.post('/api/scores', JSON.stringify(body), config);\n      props.onHide();\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    // Use animation={false} to remove Warning:findDOMNode is deprecated in StrictMode. However, modal loses animation\n    <Modal {...props} animation={false} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Nice! You got the answer!</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Total Score: {props.score}</h4>\n        <Form>\n          <Form.Group as={Row} controlId=\"formPlayerName\">\n            <Form.Label column sm={4}>\n              Your Name:\n            </Form.Label>\n            <Col sm={8}>\n              <Form.Control type=\"text\" name=\"playerName\" value={playerName} onChange={(e) => setPlayerName(e.target.value)}></Form.Control>\n            </Col>\n          </Form.Group>\n          <div className=\"save-name-buttons\">\n            <Button variant=\"secondary\" onClick={props.onHide} className=\"mr-2\">Close</Button>\n            <Button variant=\"primary\" onClick={() => saveScore()}>Save</Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default WinnerModal;","import React, { useEffect, useState, useRef } from 'react';\nimport { Container } from 'react-bootstrap';\nimport axios from 'axios';\nimport Difficulty from './Difficulty';\nimport Question from './Question';\nimport Message from './Message';\nimport WinnerModal from './WinnerModal';\n\nconst Landing = () => {\n  \n  const [puzzle, setPuzzle] = useState('');\n  const [gameStatus, setGameStatus] = useState('');\n  const [message, setMessage] = useState('');\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [missedGuesses, setMissedGuesses] = useState([]);\n  const [winnerModalShow, setWinnerModalShow] = useState(false);\n  const [questionArr, setQuestionArr] = useState([]);\n  const winnerScore = useRef(0);\n  const diffMulti = useRef(1);\n  const totalGuess = useRef(7);\n  // console.log('render');\n\n  const fetchQuestion = (puzzleType = 'easy') => {\n    axios.get(`/api/questions/${puzzleType}`).then((res) => {\n      switch(puzzleType) {\n        case 'easy':\n          diffMulti.current = 2;\n          totalGuess.current = 7;\n          break;\n\n        case 'medium':\n          diffMulti.current = 3;\n          totalGuess.current = 5;\n          break;\n        \n        case 'hard':\n          diffMulti.current = 4;\n          totalGuess.current = 3;\n          break;\n\n        default:\n          break;\n      }\n\n      const newPuzzle = res.data.question.toLowerCase();\n\n      setQuestionArr(newPuzzle.split('').map((ch) => ch === ' ' ? ' ' : '*'));\n      setPuzzle(newPuzzle);\n      setGuessedLetters([]);\n      setMissedGuesses([]);\n      setMessage('Game starts!');\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    fetchQuestion();\n  }, []);\n\n  useEffect(() => {\n    if(guessedLetters.length === 0 && questionArr.length > 0) {\n      setGameStatus('playing');\n    }\n  }, [guessedLetters, questionArr]);\n\n  \n  useEffect(() => {\n    const makeGuess = (e) => {\n      if(gameStatus !== 'playing') {\n        return ;\n      }\n      let ch = e.key;\n\n      // Check if the input not alphabetic or the Enter key\n      if(ch.toLowerCase() === ch.toUpperCase() || ch === 'Enter') {\n        setMessage('Please enter English alphabet only.');\n        return ;\n      }\n\n      ch = ch.toLowerCase();\n  \n      // Made a repeat guess, return \n      if(guessedLetters.includes(ch) || missedGuesses.includes(ch)) {\n        setMessage(`This letter '${ch.toUpperCase()}' has been guessed.`);\n        return ;\n      }\n\n      const guessRight = puzzle.includes(ch);\n      \n      if(guessRight) {\n        setGuessedLetters((prevArr) => [...prevArr, ch]);\n        setMessage(`Correct! You got the letter '${ch.toUpperCase()}'.`);\n      }\n      else {\n        setMissedGuesses((prevArr) => [...prevArr, ch]);\n        setMessage(`'${ch.toUpperCase()}' is not in the puzzle, try another!`);\n      }\n    }\n    window.addEventListener('keypress', makeGuess);\n\n    return () => {\n      window.removeEventListener('keypress', makeGuess);\n    }\n  }, [puzzle, guessedLetters, missedGuesses, gameStatus]);\n\n  // Update Question Array to display when Guessed Letter array is updated\n  useEffect(() => {\n    setQuestionArr(puzzle.split('').map((ch) => {\n        if(guessedLetters.includes(ch)) {\n          return ch;\n        }\n        else if(ch ===  ' ') {\n          return ' ';\n        }\n        return '*';\n      }));\n  }, [puzzle, guessedLetters]);\n\n  // Change game status when the user guessed all letters, or used up all guesses\n  useEffect(() => {\n    // Check if all characters are guessed\n    if(gameStatus === 'playing' && !questionArr.includes('*')) {\n      setGameStatus('winner');\n      setMessage('You got the answer! Great job!');\n    }\n\n    // Check if run out of guess\n    if(gameStatus === 'playing' && (totalGuess.current - missedGuesses.length === 0)) {\n      setGameStatus('gameover');\n      setMessage(`Sorry, the answer is '${puzzle.toUpperCase()}'. Let's play again!`);\n    }\n  }, [questionArr, missedGuesses, gameStatus, puzzle]);\n\n  // Calculate scores when the user wins, then show modal with score\n  useEffect(() => {\n  if(gameStatus === 'winner') {\n    // 1 character with 5 scores, 1 guess left with 10 scores, multiply by the difficulty of puzzle\n    winnerScore.current = (puzzle.replace(/\\s/g, '').length * 5 + (totalGuess.current - missedGuesses.length) * 10) * diffMulti.current;\n    setWinnerModalShow(true);\n  }\n}, [gameStatus, missedGuesses, puzzle]);\n\n  const closeModal = () => {\n    setWinnerModalShow(false);\n    // Set game status to 'pending' when modal close. So it won't pop up before next game starts\n    setGameStatus('pending');\n  }\n\n  return (\n    <Container>\n      <Difficulty fetchQuestion={fetchQuestion} />\n      <Question questionArr={questionArr} guessLeft={totalGuess.current - missedGuesses.length} missedGuesses={missedGuesses}/>\n      <Message message={message} />\n      <WinnerModal show={winnerModalShow} onHide={() => closeModal()} score={winnerScore.current}/>\n    </Container>\n  );\n}\n\nexport default Landing;","import React, { useState, useEffect } from 'react';\nimport { Container, Table } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst TopScores = () => {\n  const [topScores, setTopScores] = useState([]);\n  \n  const fetchScores = async () => {\n    try {\n      const scores = await axios.get('/api/scores');\n      setTopScores([...scores.data]);\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchScores();\n  }, []);\n\n  return (\n    <Container>\n      <h1 className='text-center my-5'>Top 10 Scores</h1>\n      <Table striped variant='dark'>\n        <thead className='table-header'>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Score</th>\n          </tr>\n        </thead>\n        <tbody className='table-text'>\n          { topScores.map((s, i) => (<tr key={i}><td>{i+1}</td><td>{s.name}</td><td>{s.score}</td></tr>))}\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\nexport default TopScores;\n","import React, { useState } from 'react';\nimport { Form, Row, Col, Button, Alert } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst PuzzleFactory = () => {\n  const [puzzleData, setPuzzleData] = useState({\n    puzzle: '',\n    level: 'Easy'\n  });\n\n  const { puzzle, level } = puzzleData;\n\n  const [message, setMessage] = useState({\n    type: '',\n    contents: []\n  });\n\n  const handlePuzzle = (e) => {\n    setPuzzleData({\n      ...puzzleData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const body = {\n      question: puzzle,\n      difficulty: level\n    }\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    try {\n      const res = await axios.post('/api/questions', JSON.stringify(body), config);\n      if(res.data._id) {\n        setMessage({ type: 'success', contents: [`Puzzle \"${res.data.question}\" was added successfully!`] });\n      }\n    } catch(error) {\n      const errors = error.response.data.errors;\n      if(errors) {\n        setMessage({ type: 'danger', contents: errors.map((err) => err.msg) });\n      }\n    }\n  }\n\n  return (\n    <div className='d-flex justify-content-center align-items-center vh-100 flex-column'>\n      <p>Think of a word, phrase or sentence. Proper nouns or slangs are not allowed.</p>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group as={Row} controlId='formPuzzle'>\n          <Form.Label column sm={3}>Puzzle: </Form.Label>\n          <Col sm={9}>\n            <Form.Control type='text' name='puzzle' value={puzzle} onChange={handlePuzzle}></Form.Control>\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPuzzleLevel'>\n          <Form.Label column sm={3}>Level: </Form.Label>\n          <Col sm={9}>\n            <Form.Control as='select' name='level' value={level} onChange={handlePuzzle}>\n              <option value='Easy'>Easy</option>\n              <option value='Medium'>Medium</option>\n              <option value='Hard'>Hard</option>\n            </Form.Control>\n          </Col>\n        </Form.Group>\n        <Button type='submit' className=\"btn-primary-color\">Submit</Button>\n      </Form>\n      <div className='mt-4'>\n        { message.contents.map((msg, idx) => <Alert key={idx} variant={message.type}>{msg}</Alert>) }\n      </div>\n    </div>\n  )\n}\n\nexport default PuzzleFactory;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nconst Navigation = () => {\n  return (\n    <Fragment>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand><Link to='/'><img alt=\"Hangman-Logo\" src=\"/hangman-logo.png\" height=\"40\"></img></Link></Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Link to='/' className='nav-link'>\n            Game Board\n          </Link>\n          <Link to='/scores' className='nav-link'>\n            Top Scores\n          </Link>\n        </Nav>\n      </Navbar>\n    </Fragment>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { Container, Button } from 'react-bootstrap';\n\nconst NotFound = () => {\n  return (\n    <Container className='text-center my-5'>\n      <h1>Error 404: Page Not Found</h1>\n      <Button href='/' className=\"btn-primary-color mt-4\">Back</Button>\n    </Container>\n  );\n}\n\nexport default NotFound;","import React, { Fragment } from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Landing from './components/layout/Landing';\nimport TopScores from './components/layout/TopScores';\nimport PuzzleFactory from './components/layout/PuzzleFactory';\nimport Navigation from './components/layout/Navigation';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NotFound from './components/layout/404';\n\nconst App = () => {\n  \n  return (\n    <Router>\n      <Fragment>\n        <Navigation />\n        <Switch>\n          <Route exact path='/' component={Landing}/>\n          <Route exact path='/scores' component={TopScores} />\n          <Route exact path='/admin-only' component={PuzzleFactory} />\n          <Route component={NotFound} />\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n}\n  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}